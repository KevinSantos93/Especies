filter(cuenca == 'Penagos')
morro <- escalado %>%
filter(cuenca == 'Morro')
tejar <- escalado %>%
filter(cuenca == 'Tejar')
#Análisis de componentes para la cuenca Penagos
#Aplica el pca
res.pca <- prcomp(penagos, scale. = TRUE)
View(penagos)
#Análisis de componentes para la cuenca Penagos
#Aplica el pca
res.pca <- prcomp(penagos[, 1:6], scale. = TRUE)
#Resultados del análisis
summary(res.pca)
#Visualización gráfica
fviz_eig(res.pca)
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE
)
View(escalado)
#Análisis de componentes para la cuenca Penagos
#Aplica el pca
res.pca <- prcomp(penagos[, 1:6])
#Resultados del análisis
summary(res.pca)
#Visualización gráfica
fviz_eig(res.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE
)
#Análisis de componentes para la cuenca Penagos
#Aplica el pca
res.pca <- prcomp(penagos[, 1:6], scale = TRUE)
#Resultados del análisis
summary(res.pca)
#Visualización gráfica
fviz_eig(res.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Groups",
repel = TRUE
)
groups <- as.factor(penagos$punto)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
groups <- as.factor(penagos$punto)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
#
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
groups <- as.factor(penagos$punto)
fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
#Análisis de componentes para la cuenca Tejar
#Aplica el pca
res.pca <- prcomp(tejar[, 1:6], scale = TRUE)
#Análisis de componentes para la cuenca Tejar
#Aplica el pca
res.pca <- prcomp(tejar[, 1:6], scale = TRUE)
View(tejar)
#Análisis de componentes para la cuenca Morro
morro <- escalado %>%
filter(cuenca == 'Morro')
#Aplica el pca
res.pca <- prcomp(morro[, 1:6], scale = TRUE)
#Resultados del análisis
summary(res.pca)
#Visualización gráfica
fviz_eig(res.pca)
#Visualización gráfica
fviz_eig(res.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(res.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. La variable del oxigeno disuelto
#es la que menos contribuye a las componentes.
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#Aplica el pca
morro.pca <- prcomp(morro[, 1:6], scale = TRUE)
#Resultados del análisis
summary(morro.pca)
#Visualización gráfica
fviz_eig(morro.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(morro.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. La variable del oxigeno disuelto
#es la que menos contribuye a las componentes.
fviz_pca_var(morro.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(morro$Periodo)
fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por punto
groups <- as.factor(morro$punto)
fviz_pca_ind(norro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
View(morro)
tejar <- escalado %>%
filter(cuenca == 'Tejar')
View(variablesEstandarizadas)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'latin1', sep = ';')
#Realiza el test de normalidad de shapiro para cada una de las variables
shapiro_test <- variablesFisicas %>%
summarise(p_valor_temperatura = shapiro.test(temp..C.)$p.value,
p_valor_oxigenoDisuelto = shapiro.test(Odisuelto..mg.L.)$p.value,
p_valor_conductividadElectrica = shapiro.test(condElec.µS.cm.)$p.value,
p_valor_pH = shapiro.test(pH)$p.value,
p_valor_dureza = shapiro.test(dureza.mg.LCaCO3.)$p.value,
p_valor_caudal = shapiro.test(caudal.m3.s.1.)$p.value)
AD_test <- variablesFisicas %>%
summarise(p_valor_temperatura = ad.test(temp..C.)$p.value,
p_valor_oxigenoDisuelto = ad.test(Odisuelto..mg.L.)$p.value,
p_valor_conductividadElectrica = ad.test(condElec.µS.cm.)$p.value,
p_valor_pH = ad.test(pH)$p.value,
p_valor_dureza = ad.test(dureza.mg.LCaCO3.)$p.value,
p_valor_caudal = ad.test(caudal.m3.s.1.)$p.value)
# Grafica el Q-Q plot con ggplot2
variablesFisicas %>%
select(c(4:9)) %>%
gather(variable, valor) %>%
ggplot(aes(sample = valor)) +
stat_qq() +
facet_wrap(~ variable, scales = 'free')
# Estandarización logarítmica para cada variable
variablesEstandarizadas <- variablesFisicas %>%
mutate(
temp..C. = log(temp..C. + 1),
Odisuelto..mg.L. = log(Odisuelto..mg.L. + 1),
condElec.µS.cm. = log(condElec.µS.cm. + 1),
pH = log(pH + 1),
dureza.mg.LCaCO3. = log(dureza.mg.LCaCO3. + 1),
caudal.m3.s.1. = log(caudal.m3.s.1. + 1)
)
##Análisis de componentes principales por rio
escalado <- scale(variablesEstandarizadas[,4:9])
escalado <- cbind(escalado, variablesEstandarizadas[,1:3])
penagos <- escalado %>%
filter(cuenca == 'Penagos')
tejar <- escalado %>%
filter(cuenca == 'Tejar')
penagos <- escalado %>%
filter(cuenca == 'Penagos')
#Aplica el pca
res.pca <- prcomp(penagos[, 1:6], scale = TRUE)
#Aplica el pca
penagos.pca <- prcomp(penagos[, 1:6], scale = TRUE)
#Resultados del análisis
summary(penagos.pca)
#Visualización gráfica
fviz_eig(res.pca)
#Visualización gráfica
fviz_eig(penagos.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(penagos.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(penagos.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
par(mfrow = c(1, 2))
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo <- fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
install.packages('patchwork')
p1 + p2
periodo + punto
library(patchwork)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$Periodo)
periodo <- fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
punto <- fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo + punto
periodo/punto
#Análisis de componentes para la cuenca Morro
morro <- escalado %>%
filter(cuenca == 'Morro')
#Aplica el pca
morro.pca <- prcomp(morro[, 1:6], scale = TRUE)
#Resultados del análisis
summary(morro.pca)
#Visualización gráfica
fviz_eig(morro.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(morro.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. La variable del oxigeno disuelto
#es la que menos contribuye a las componentes.
fviz_pca_var(morro.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
periodo <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por punto
groups <- as.factor(morro$punto)
punto <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(morro$Periodo)
periodo <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por punto
groups <- as.factor(morro$punto)
punto <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
tejar <- escalado %>%
filter(cuenca == 'Tejar')
tejar <- escalado %>%
filter(cuenca == 'Tejar')
View(variablesFisicas)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'latin1', sep = ';')
# Estandarización logarítmica para cada variable
variablesEstandarizadas <- variablesFisicas %>%
mutate(
temp..C. = log(temp..C. + 1),
Odisuelto..mg.L. = log(Odisuelto..mg.L. + 1),
condElec.µS.cm. = log(condElec.µS.cm. + 1),
pH = log(pH + 1),
dureza.mg.LCaCO3. = log(dureza.mg.LCaCO3. + 1),
caudal.m3.s.1. = log(caudal.m3.s.1. + 1)
)
##Análisis de componentes principales por rio
escalado <- scale(variablesEstandarizadas[,4:9])
escalado <- cbind(escalado, variablesEstandarizadas[,1:3])
tejar <- escalado %>%
filter(cuenca == 'Tejar')
View(tejar)
tejar <- escalado %>%
filter(cuenca == 'Tejar ')
#Aplica el pca
tejar.pca <- prcomp(tejar[, 1:6], scale = TRUE)
#Resultados del análisis
summary(tejar.pca)
#Visualización gráfica
fviz_eig(tejar.pca)
#Visualización gráfica
fviz_eig(tejar.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(tejar.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(tejar.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Laa variable del oxigeno disuelto
#es la que menos contribuye a las componentes.
fviz_pca_var(tejar.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(tejar$Periodo)
periodo <- fviz_pca_ind(tejar.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
punto <- fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
