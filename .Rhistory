# Estandarización logarítmica para cada variable
variablesEstandarizadas <- variablesFisicas %>%
mutate(
temp..C. = log(temp..C. + 1),
Odisuelto..mg.L. = log(Odisuelto..mg.L. + 1),
condElec.µS.cm. = log(condElec.µS.cm. + 1),
pH = log(pH + 1),
dureza.mg.LCaCO3. = log(dureza.mg.LCaCO3. + 1),
caudal.m3.s.1. = log(caudal.m3.s.1. + 1)
)
##Análisis de componentes principales por rio
escalado <- scale(variablesEstandarizadas[,4:9])
escalado <- cbind(escalado, variablesEstandarizadas[,1:3])
penagos <- escalado %>%
filter(cuenca == 'Penagos')
tejar <- escalado %>%
filter(cuenca == 'Tejar')
penagos <- escalado %>%
filter(cuenca == 'Penagos')
#Aplica el pca
res.pca <- prcomp(penagos[, 1:6], scale = TRUE)
#Aplica el pca
penagos.pca <- prcomp(penagos[, 1:6], scale = TRUE)
#Resultados del análisis
summary(penagos.pca)
#Visualización gráfica
fviz_eig(res.pca)
#Visualización gráfica
fviz_eig(penagos.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(penagos.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(penagos.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
par(mfrow = c(1, 2))
groups <- as.factor(penagos$Periodo)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo <- fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
install.packages('patchwork')
p1 + p2
periodo + punto
library(patchwork)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$Periodo)
periodo <- fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
punto <- fviz_pca_ind(penagos.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo + punto
periodo/punto
#Análisis de componentes para la cuenca Morro
morro <- escalado %>%
filter(cuenca == 'Morro')
#Aplica el pca
morro.pca <- prcomp(morro[, 1:6], scale = TRUE)
#Resultados del análisis
summary(morro.pca)
#Visualización gráfica
fviz_eig(morro.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(morro.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. La variable del oxigeno disuelto
#es la que menos contribuye a las componentes.
fviz_pca_var(morro.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
periodo <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por punto
groups <- as.factor(morro$punto)
punto <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(morro$Periodo)
periodo <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por punto
groups <- as.factor(morro$punto)
punto <- fviz_pca_ind(morro.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
tejar <- escalado %>%
filter(cuenca == 'Tejar')
tejar <- escalado %>%
filter(cuenca == 'Tejar')
View(variablesFisicas)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'latin1', sep = ';')
# Estandarización logarítmica para cada variable
variablesEstandarizadas <- variablesFisicas %>%
mutate(
temp..C. = log(temp..C. + 1),
Odisuelto..mg.L. = log(Odisuelto..mg.L. + 1),
condElec.µS.cm. = log(condElec.µS.cm. + 1),
pH = log(pH + 1),
dureza.mg.LCaCO3. = log(dureza.mg.LCaCO3. + 1),
caudal.m3.s.1. = log(caudal.m3.s.1. + 1)
)
##Análisis de componentes principales por rio
escalado <- scale(variablesEstandarizadas[,4:9])
escalado <- cbind(escalado, variablesEstandarizadas[,1:3])
tejar <- escalado %>%
filter(cuenca == 'Tejar')
View(tejar)
tejar <- escalado %>%
filter(cuenca == 'Tejar ')
#Aplica el pca
tejar.pca <- prcomp(tejar[, 1:6], scale = TRUE)
#Resultados del análisis
summary(tejar.pca)
#Visualización gráfica
fviz_eig(tejar.pca)
#Visualización gráfica
fviz_eig(tejar.pca)
#distribución de las observaciones. Observaciones similares estan mas cercanas
fviz_pca_ind(tejar.pca,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Las variables de la temperatura
# y e pH son las que menos contribuyen a las componentes.
fviz_pca_var(tejar.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#El color representa la contribución a la componente. Laa variable del oxigeno disuelto
#es la que menos contribuye a las componentes.
fviz_pca_var(tejar.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(tejar$Periodo)
periodo <- fviz_pca_ind(tejar.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
punto <- fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
library(factoextra)
library(patchwork)
especies <- read.csv('especies.csv')
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
library(BiodiversityR)
install.packages('BiodiversityR')
specnumber(especies)
View(especies)
apply(especies, 1, sum)
boxplot(especies, ylab = "Abundancia", "Especies")
boxplot(especies[,3:34], ylab = "Abundancia", "Especies")
#estimado del número de especies no observadas.
specpool(especies)
#estimado del número de especies no observadas.
specpool(especies[,3:34])
#estimado del número de especies no observadas.
specpool(especies[,3:34])
estimateR(especies)
estimateR(especies[,3:34])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies,method="collector")
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,3:34],method="collector")
sae<-specaccum(especies[,3:34], "exact")
sac<-specaccum(especies[,3:34], "coleman")
sarf<-specaccum(especies[,3:34], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,3:34])
summary(pool, display = "chao")
plot(pool)
##Análisis de correspondencia
summary(especies)
library(GGally)
install.packages('Ggally')
install.packages('GGally')
library(GGally)
ggpairs(x, title = "Variables fisiológicas")
ggpairs(especies, title = "Variables fisiológicas")
ggduo(data1,columnsX = 2:17,columnsY = 18:34,
types = list(continuous = "smooth_lm"),
title = "Correlación entre variables fisiológicas y  deportivas",
)
ggduo(especies,columnsX = 2:17,columnsY = 18:34,
types = list(continuous = "smooth_lm"),
title = "Correlación entre variables fisiológicas y  deportivas",
)
especies <- read.csv('especies.csv', sep = ';')
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
specnumber(especies)
#número de especies (familia) por observación
specnumber(especies[,4:35])
View(especies)
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#estimado del número de especies no observadas.
specpool(especies[,4:35])
estimateR(especies[,4:35])
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
specnumber(especies[,4:35])
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#estimado del número de especies no observadas.
specpool(especies[,4:35])
estimateR(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
View(abundancia)
abundancia$stats
abundancia$conf
estimateR(especies[,4:35])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,4:35],method="collector")
sae<-specaccum(especies[,4:35], "exact")
sac<-specaccum(especies[,4:35], "coleman")
sarf<-specaccum(especies[,4:35], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,4:35])
summary(pool, display = "chao")
plot(pool)
##Análisis de correspondencia
summary(especies)
library(CCA)
install.packages('CCA')
library(CCA)
mat_corr <- matcor(especies)
mat_corr <- matcor(especies[4:35])
mat_corr <- matcor(especies$Epoca, especies[4:35])
mat_corr <- matcor(especies[4:35])
especies <- read.csv('especies.csv', sep = ';')
View(especies)
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
estimateR(especies[,4:35])
dput(head(especies,4))
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- datos[, c(4,35)]
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, c(4,35)]
View(datos_seleccionados)
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 4:35]
View(datos_seleccionados)
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies)
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies)
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
especies <- read.csv('especies.csv', sep = ';')
##Análisis de correspondencia
summary(especies)
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 4:35]
View(especies)
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 3:20]
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies)
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies[,3:20])
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 3:12]
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies[,13:20])
View(especies)
ggpairs(especies, title = 'Familias')
ggpairs(especies[3:20], title = 'Familias')
ggpairs(especies[3:12], title = 'Familias')
ggpairs(especies[3:11], title = 'Época lluviosa')
ggpairs(especies[12:20], title = 'Época lluviosa')
View(especies)
ggpairs(especies[3:11], title = 'Época lluviosa')
ggpairs(especies[12:20], title = 'Época Seca')
especies <- read.csv('especies.csv', sep = ';')
View(especies)
##Análisis de correspondencia
summary(especies)
ggpairs(especies[3:11], title = 'Época lluviosa')
ggduo(especies,columnsX = 3:11,columnsY = 13:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre variables fisiológicas y  deportivas",
)
ggduo(especies,columnsX = 3:11,columnsY = 13:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre observaciones en época seca y lluviosa",
)
ggduo(especies,columnsX = 3:11,columnsY = 12:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre observaciones en época seca y lluviosa",
)
ggpairs(especies[,3:11], title = 'Época lluviosa')
ggpairs(especies[,12:20], title = 'Época Seca')
##Matriz de correlaciones
mat_cor  <-matcor(especies[,3:11],especies[,12:20])
View(mat_cor)
mat_cor
cc1 <- cc(especies[,3:11],especies[,12:20])
cc1$cor
cc1[3:4]
plt.cc(cc1, var.label = TRUE, d1 = 1, d2 = 2, type = "b")
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
View(especies)
specnumber(especies[,3:20])
#Abundancia de las familias
abundancia <- boxplot(especies[,3:20], ylab = "Abundancia", "Especies")
estimateR(especies[,3:20])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,3:20],method="collector")
sae<-specaccum(especies[,3:20], "exact")
sac<-specaccum(especies[,3:20], "coleman")
sarf<-specaccum(especies[,3:20], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,3:20])
summary(pool, display = "chao")
plot(pool)
View(especies)
##Análisis de correspondencia
summary(especies)
ggpairs(especies[,3:11], title = 'Época lluviosa')
dput(head(especies,4))
##Análisis de correspondencia
correlacion <- read.csv('correlacion.csv', sep = ';')
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
specnumber(especies[,3:20])
View(especies)
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#Calculo de la riqueza
barplot(specnumber(especies[,4:35]))
#Calculo de la riqueza
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
estimateR(especies[,4:35])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,4:35],method="collector")
sae<-specaccum(especies[,4:35], "exact")
sac<-specaccum(especies[,4:35], "coleman")
sarf<-specaccum(especies[,4:35], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,4:35])
summary(pool, display = "chao")
plot(pool)
