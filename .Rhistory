repel = TRUE     # Avoid text overlapping
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(tejar$Periodo)
periodo <- fviz_pca_ind(tejar.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Época",
repel = TRUE
)
#Muestra cómo se agrupan las observaciones por periodo
groups <- as.factor(penagos$punto)
punto <- fviz_pca_ind(res.pca,
col.ind = groups, # color by groups
palette = c("#00AFBB",  "#FC4E07", "#E7B800"),
addEllipses = TRUE, # Concentration ellipses
ellipse.type = "confidence",
legend.title = "Puntos",
repel = TRUE
)
periodo/punto
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
library(factoextra)
library(patchwork)
especies <- read.csv('especies.csv')
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
library(BiodiversityR)
install.packages('BiodiversityR')
specnumber(especies)
View(especies)
apply(especies, 1, sum)
boxplot(especies, ylab = "Abundancia", "Especies")
boxplot(especies[,3:34], ylab = "Abundancia", "Especies")
#estimado del número de especies no observadas.
specpool(especies)
#estimado del número de especies no observadas.
specpool(especies[,3:34])
#estimado del número de especies no observadas.
specpool(especies[,3:34])
estimateR(especies)
estimateR(especies[,3:34])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies,method="collector")
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,3:34],method="collector")
sae<-specaccum(especies[,3:34], "exact")
sac<-specaccum(especies[,3:34], "coleman")
sarf<-specaccum(especies[,3:34], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,3:34])
summary(pool, display = "chao")
plot(pool)
##Análisis de correspondencia
summary(especies)
library(GGally)
install.packages('Ggally')
install.packages('GGally')
library(GGally)
ggpairs(x, title = "Variables fisiológicas")
ggpairs(especies, title = "Variables fisiológicas")
ggduo(data1,columnsX = 2:17,columnsY = 18:34,
types = list(continuous = "smooth_lm"),
title = "Correlación entre variables fisiológicas y  deportivas",
)
ggduo(especies,columnsX = 2:17,columnsY = 18:34,
types = list(continuous = "smooth_lm"),
title = "Correlación entre variables fisiológicas y  deportivas",
)
especies <- read.csv('especies.csv', sep = ';')
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
specnumber(especies)
#número de especies (familia) por observación
specnumber(especies[,4:35])
View(especies)
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#estimado del número de especies no observadas.
specpool(especies[,4:35])
estimateR(especies[,4:35])
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
specnumber(especies[,4:35])
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#estimado del número de especies no observadas.
specpool(especies[,4:35])
estimateR(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
View(abundancia)
abundancia$stats
abundancia$conf
estimateR(especies[,4:35])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,4:35],method="collector")
sae<-specaccum(especies[,4:35], "exact")
sac<-specaccum(especies[,4:35], "coleman")
sarf<-specaccum(especies[,4:35], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,4:35])
summary(pool, display = "chao")
plot(pool)
##Análisis de correspondencia
summary(especies)
library(CCA)
install.packages('CCA')
library(CCA)
mat_corr <- matcor(especies)
mat_corr <- matcor(especies[4:35])
mat_corr <- matcor(especies$Epoca, especies[4:35])
mat_corr <- matcor(especies[4:35])
especies <- read.csv('especies.csv', sep = ';')
View(especies)
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
estimateR(especies[,4:35])
dput(head(especies,4))
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- datos[, c(4,35)]
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, c(4,35)]
View(datos_seleccionados)
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 4:35]
View(datos_seleccionados)
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies)
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies)
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
View(especies)
especies <- read.csv('especies.csv', sep = ';')
especies <- read.csv('especies.csv', sep = ';')
##Análisis de correspondencia
summary(especies)
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 4:35]
View(especies)
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 3:20]
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies)
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies[,3:20])
# Supongamos que tienes una matriz llamada 'datos' con las variables ambientales y las especies
# Puedes seleccionar las columnas relevantes para el CCA
datos_seleccionados <- especies[, 3:12]
# Ejecuta el CCA
cca_result <- cca(datos_seleccionados ~ ., data = especies[,13:20])
View(especies)
ggpairs(especies, title = 'Familias')
ggpairs(especies[3:20], title = 'Familias')
ggpairs(especies[3:12], title = 'Familias')
ggpairs(especies[3:11], title = 'Época lluviosa')
ggpairs(especies[12:20], title = 'Época lluviosa')
View(especies)
ggpairs(especies[3:11], title = 'Época lluviosa')
ggpairs(especies[12:20], title = 'Época Seca')
especies <- read.csv('especies.csv', sep = ';')
View(especies)
##Análisis de correspondencia
summary(especies)
ggpairs(especies[3:11], title = 'Época lluviosa')
ggduo(especies,columnsX = 3:11,columnsY = 13:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre variables fisiológicas y  deportivas",
)
ggduo(especies,columnsX = 3:11,columnsY = 13:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre observaciones en época seca y lluviosa",
)
ggduo(especies,columnsX = 3:11,columnsY = 12:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre observaciones en época seca y lluviosa",
)
ggpairs(especies[,3:11], title = 'Época lluviosa')
ggpairs(especies[,12:20], title = 'Época Seca')
##Matriz de correlaciones
mat_cor  <-matcor(especies[,3:11],especies[,12:20])
View(mat_cor)
mat_cor
cc1 <- cc(especies[,3:11],especies[,12:20])
cc1$cor
cc1[3:4]
plt.cc(cc1, var.label = TRUE, d1 = 1, d2 = 2, type = "b")
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
View(especies)
specnumber(especies[,3:20])
#Abundancia de las familias
abundancia <- boxplot(especies[,3:20], ylab = "Abundancia", "Especies")
estimateR(especies[,3:20])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,3:20],method="collector")
sae<-specaccum(especies[,3:20], "exact")
sac<-specaccum(especies[,3:20], "coleman")
sarf<-specaccum(especies[,3:20], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,3:20])
summary(pool, display = "chao")
plot(pool)
View(especies)
##Análisis de correspondencia
summary(especies)
ggpairs(especies[,3:11], title = 'Época lluviosa')
dput(head(especies,4))
##Análisis de correspondencia
correlacion <- read.csv('correlacion.csv', sep = ';')
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
specnumber(especies[,3:20])
View(especies)
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#Calculo de la riqueza
barplot(specnumber(especies[,4:35]))
#Calculo de la riqueza
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
estimateR(especies[,4:35])
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,4:35],method="collector")
sae<-specaccum(especies[,4:35], "exact")
sac<-specaccum(especies[,4:35], "coleman")
sarf<-specaccum(especies[,4:35], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,4:35])
summary(pool, display = "chao")
plot(pool)
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
library(factoextra)
library(patchwork)
library(BiodiversityR)
library(CCA)
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
#Calculo de la riqueza
specnumber(especies[,4:35])
#Abundancia de las familias
abundancia <- boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
ggplot(especies[,4:35]) +
geom_boxplot()
ggplot(especies[,4:35]) +
geom_boxplot(aes(especies))
ggplot(especies[,4:35]) +
geom_boxplot(aes(especies,[4,35]))
ggplot(especies[,4:35]) +
geom_boxplot(aes(especies[,4:35]))
ggplot(especies, aes(x = names(especies), y = especies[,4:35])) +
geom_boxplot()
ggplot(especies, aes(especies$Hydrobiosidae)) +
geom_boxplot()
dput(head(especies,5))
especies %>%
pivot_longer(cols = Hydrobiosidae:ND,
names_to = "Especie",
values_to = "Abundancia") %>%
ggplot(aes(x =Especie, y = Abundancia)) +
geom_boxplot() +
labs(x = "Especie", y = "Abundancia")
#Abundancia de las familias
boxplot(especies[,4:35], ylab = "Abundancia", "Especies")
especies %>%
pivot_longer(cols = Hydrobiosidae:ND,
names_to = "Especie",
values_to = "Abundancia") %>%
ggplot(aes(x =Especie, y = Abundancia)) +
geom_boxplot() +
labs(x = "Especie", y = "Abundancia")
especies %>%
pivot_longer(cols = Hydrobiosidae:ND,
names_to = "Especie",
values_to = "Abundancia") %>%
ggplot(aes(x =Especie, y = Abundancia)) +
geom_boxplot() +
labs(x = "Especie", y = "Abundancia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
estimateR(especies[,4:35])
###Calculamos chao1, para pbservar las coincidencias
chao1(especies[4,35])
install.packages('fossil')
library(fossil)
###Calculamos chao2, con el paquete fossil
estimateR(especies[4,35], method = "chao2")
###Calculamos chao2, con el paquete fossil
incidencias <- ifelse(especies[4,35] > 0, 1, 0)
###Calculamos chao2, con el paquete fossil
incidencias <- ifelse(especies[4,35] > 0, 1, 0)
##Obtenemos las incidencias, para calclular chao2
especies <- especies %>%
mutate_at(vars(4:35), ~ ifelse(. > 0, 1, 0))
View(especies)
especies <- read.csv('especies.csv', sep = ';')
##Obtenemos las incidencias, para calclular chao2
incidencias <- especies %>%
mutate_at(vars(4:35), ~ ifelse(. > 0, 1, 0))
View(incidencias)
estimateR(incidencias[4,35], method = "chao2")
chao2 <- estimateR(incidencias[4,35], method = "chao2")
estimateR(incidencias[4,35], method = "chao2")
estimateR(incidencias[4], method = "chao2")
#Calcula los estimadores Chao, Chao corregido, primer y segundo orden de jacknife
#y bootstrap
estimateR(especies[,4:35], method = "chao1")
#Calcula los estimadores Chao, Chao corregido, primer y segundo orden de jacknife
#y bootstrap
estimateR(especies[,4:35])
estimateR(incidencias[4], method = "chao2")
##Calculo de chao2
estimateR(incidencias[4], method = "chao2")
#Curvas de acumulación
#Existen diferentes metodos para estimar la riqueza.
saco<-specaccum(comm=especies[,4:35],method="collector")
sae<-specaccum(especies[,4:35], "exact")
sac<-specaccum(especies[,4:35], "coleman")
sarf<-specaccum(especies[,4:35], "rarefaction")
par(mfrow=c(2,2),cex=1.2) # particiona ventana grafica en 2x2
plot(saco,ci.type="line",ci.lty=2)
plot(sae,ci.type="line",ci.lty=2)
plot(sac,ci.type="line",ci.lty=2)
plot(sarf,ci.type="line",ci.lty=2)
#Utilizando cantidad de especies observadas, podemos calcular la riqueza con métodos no paramétricos
pool <- poolaccum(especies[,4:35])
summary(pool, display = "chao")
summary(pool, display = "chao2")
summary(pool, display = "chao")
plot(pool)
##Análisis de correspondencia
correlacion <- read.csv('correlacion.csv', sep = ';')
summary(correlacion)
ggpairs(correlacion[,3:11], title = 'Época lluviosa')
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
library(factoextra)
library(patchwork)
library(BiodiversityR)
library(GGally)
library(CCA)
library(fossil)
ggpairs(correlacion[,3:11], title = 'Época lluviosa')
##Correlación entre muestras de la época seca
ggpairs(correlacion[,12:20], title = 'Época Seca')
ggduo(correlacion,columnsX = 3:11,columnsY = 12:20,
types = list(continuous = "smooth_lm"),
title = "Correlación entre observaciones en época seca y lluviosa",
)
##Matriz de correlaciones
mat_cor  <- matcor(correlacion[,3:11],correlacion[,12:20])
mat_cor
cc1 <- cc(correlacion[,3:11],correlacion[,12:20])
cc1$cor
cc1[3:4]
plt.cc(cc1, var.label = TRUE, d1 = 1, d2 = 2, type = "b")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library("knitr")
knit2pdf("file")
knit2pdf("especies")
rmarkdown::render('especies.rmd', output_format = 'pdf_document')
knit2pdf("especies")
knit2pdf("especies.rmd")
knit2html("especies.rmd")
library(installr)
uninstall.R("all")
uninstall.R("all")
install.R("4")
install.R("all")
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(patchwork)
library(BiodiversityR)
library(GGally)
library(CCA)
library(fossil)
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
#Calculo de la riqueza
specnumber(especies[,4:35])
especies %>%
pivot_longer(cols = Hydrobiosidae:ND,
names_to = "Especie",
values_to = "Abundancia") %>%
ggplot(aes(x =Especie, y = Abundancia)) +
geom_boxplot() +
labs(x = "Especie", y = "Abundancia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Calcula los estimadores Chao, Chao corregido, primer y segundo orden de jacknife
#y bootstrap
estimateR(especies[,4:35])
##Obtenemos las incidencias, para calclular chao2
incidencias <- especies %>%
mutate_at(vars(4:35), ~ ifelse(. > 0, 1, 0))
library(vegan)
install.packages('lattice')
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
install.packages('grid')
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
library(factoextra)
library(patchwork)
library(BiodiversityR)
library(GGally)
library(CCA)
library(fossil)
especies <- read.csv('especies.csv', sep = ';')
#número de especies (familia) por observación
par(mfrow=c(1,1),cex=1.2) # particiona ventana grafica en 2x2
#Calculo de la riqueza
specnumber(especies[,4:35])
especies %>%
pivot_longer(cols = Hydrobiosidae:ND,
names_to = "Especie",
values_to = "Abundancia") %>%
ggplot(aes(x =Especie, y = Abundancia)) +
geom_boxplot() +
labs(x = "Especie", y = "Abundancia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Calcula los estimadores Chao, Chao corregido, primer y segundo orden de jacknife
#y bootstrap
estimateR(especies[,4:35])
setwd("C:/Users/KSerrano/Documents/GitHub/Especies")
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(dplyr)
library(nortest)
library(ggplot2)
library(tidyr)
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/factoextra")
library(factoextra)
library(patchwork)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'latin1', sep = ';')
View(variablesFisicas)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'utf-8', sep = ';')
View(variablesFisicas)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'latin1', sep = ';')
View(variablesFisicas)
variablesFisicas <- read.csv('fisicoQuimico.csv', encoding = 'latin1', sep = ';')
View(variablesFisicas)
